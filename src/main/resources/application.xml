<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <context:property-placeholder location="classpath:datasource.properties"></context:property-placeholder>

    <!--数据源配置-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${driverClassName}"></property>
        <property name="url" value="${url}"></property>
        <property name="username" value="${user-name}"></property>
        <property name="password" value="${user-password}"></property>
        <property name="initialSize" value="${initialSize}"></property>
        <property name="minIdle" value="${minIdle}"></property>
        <property name="maxActive" value="${maxActive}"></property>
        <property name="maxWait"  value="${maxWait}"></property>
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"></property>
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"></property>
        <property name="validationQuery" value="${validationQuery}"></property>
        <property name="testWhileIdle" value="${testWhileIdle}"></property>
        <property name="testOnBorrow" value="${testOnBorrow}"></property>
        <property name="testOnReturn" value="${testOnReturn}"></property>
        <property name="filters" value="${filters}"></property>
    </bean>

    <!--事务配置-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--开启基于注解的切面配置-->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>

    <!--配置事务的属性-->
    <tx:advice id="transactionInterceptor" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="select*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--基于配置的声名式事务-->
    <aop:config >
        <aop:pointcut id="tx-pointcut" expression="execution(* com.security.service..*.*(..))"></aop:pointcut>
        <aop:advisor advice-ref="transactionInterceptor" pointcut-ref="tx-pointcut"></aop:advisor>
    </aop:config>

    <!--开启基于注解的声名式事务-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>


    <!--mybatis配置-->
    <bean  class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="mapperLocations" value="classpath:mybatis/mappers/*Mapper.xml"></property>
        <property name="configLocation" value="classpath:mybatis/config/mybatis-config.xml"></property>
    </bean>

    <!--开启mybatis的注解-->
    <mybatis:scan base-package="com.security.dao"></mybatis:scan>




</beans>